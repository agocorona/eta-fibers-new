
==================== STG syntax: ====================
2018-07-30 11:23:39.848641 UTC

Control.Concurrent.Fiber.MVar.$wputMVar [InlPrag=[0]]
  :: forall a_aJU6.
     GHC.Prim.MVar# GHC.Prim.RealWorld a_aJU6
     -> a_aJU6
     -> (# (Control.Concurrent.Fiber.Dyn -> GHC.Types.IO ())
           -> GHC.Types.IO () #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [ww_sKAK w_sKAL]
        let {
          lvl_sKAM [Occ=OnceL]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Any #)
          [LclId, Arity=1, Str=, Unf=OtherCon []] =
              \r srt:SRT:[] [s_sKAO]
                  let {
                    sat_sKAQ [Occ=Once] :: GHC.Prim.Any
                    [LclId, Str=] =
                        \u srt:SRT:[] [] a1_sKAN Control.Concurrent.Fiber.unFiber1 s_sKAO;
                  } in 
                    case
                        __primcall  eta.runtime.stg.Stg.trampoline [sat_sKAQ]
                    of
                    _ [Occ=Dead]
                    { Unit# ipv_sKAS ->
                          case freshStateToken# [ipv_sKAS] of wild_sKAT [OS=OneShot] {
                            __DEFAULT -> (#,#) [wild_sKAT ipv_sKAS];
                          };
                    };
          a1_sKAN [Occ=LoopBreaker]
            :: (Control.Concurrent.Fiber.Dyn -> GHC.Types.IO ())
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId,
           Arity=2,
           Str=<C(C(S)),1*C1(C1(U(U,U)))><S,U>,
           Unf=OtherCon []] =
              \r srt:SRT:[] [k_sKAU s_sKAV]
                  case tryPutMVar# [ww_sKAK w_sKAL s_sKAV] of _ [Occ=Dead] {
                    (#,#) ipv_sKAX [Occ=Once*] ipv1_sKAY [Occ=Once!] ->
                        case ipv1_sKAY of _ [Occ=Dead] {
                          __DEFAULT ->
                              case
                                  __primcall  eta.fibers.PrimOps.awakenMVarListeners [ww_sKAK
                                                                                      ipv_sKAX]
                              of
                              s''_sKB1 [OS=OneShot]
                              { __DEFAULT -> k_sKAU GHC.Tuple.() s''_sKB1;
                              };
                          0 ->
                              case
                                  __primcall  eta.fibers.PrimOps.addMVarListener [ww_sKAK ipv_sKAX]
                              of
                              s''_sKB3 [OS=OneShot]
                              { __DEFAULT ->
                                    let {
                                      sat_sKB7 [Occ=Once] :: GHC.Prim.Any
                                      [LclId, Str=] =
                                          \u srt:SRT:[] []
                                              case
                                                  __primcall  eta.fibers.PrimOps.yieldFiber [1
                                                                                             lvl_sKAM
                                                                                             s''_sKB3]
                                              of
                                              s'_sKB6 [OS=OneShot]
                                              { __DEFAULT ->
                                                    a1_sKAN
                                                        Control.Concurrent.Fiber.unFiber1 s'_sKB6;
                                              };
                                    } in 
                                      case
                                          __primcall  eta.runtime.stg.Stg.trampoline [sat_sKB7]
                                      of
                                      _ [Occ=Dead]
                                      { Unit# ipv2_sKB9 ->
                                            case
                                                freshStateToken# [ipv2_sKB9]
                                            of
                                            wild_sKBA [OS=OneShot]
                                            { __DEFAULT -> k_sKAU ipv2_sKB9 wild_sKBA;
                                            };
                                      };
                              };
                        };
                  };
        } in  Unit# [a1_sKAN];
Control.Concurrent.Fiber.MVar.putMVar [InlPrag=INLINE[0]]
  :: forall a_aJU6.
     GHC.MVar.MVar a_aJU6 -> a_aJU6 -> Control.Concurrent.Fiber.Fiber ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><L,U>m,
 Unf=OtherCon []] =
    \r srt:SRT:[] [w_sKBB w1_sKBC]
        case w_sKBB of _ [Occ=Dead] {
          GHC.MVar.MVar ww1_sKBE [Occ=Once] ->
              case
                  Control.Concurrent.Fiber.MVar.$wputMVar ww1_sKBE w1_sKBC
              of
              _ [Occ=Dead]
              { Unit# ww3_sKBG [Occ=Once] ->
                    Control.Concurrent.Fiber.Fiber [ww3_sKBG];
              };
        };
Control.Concurrent.Fiber.MVar.$wtakeMVar [InlPrag=[0]]
  :: forall a_aJU7.
     GHC.Prim.MVar# GHC.Prim.RealWorld a_aJU7
     -> (# (Control.Concurrent.Fiber.Dyn -> GHC.Types.IO a_aJU7)
           -> GHC.Types.IO a_aJU7 #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [ww_sKBH]
        let {
          lvl_sKBI [Occ=OnceL]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Any #)
          [LclId, Arity=1, Str=, Unf=OtherCon []] =
              \r srt:SRT:[] [s_sKBK]
                  let {
                    sat_sKBM [Occ=Once] :: GHC.Prim.Any
                    [LclId, Str=] =
                        \u srt:SRT:[] [] a1_sKBJ Control.Concurrent.Fiber.unFiber1 s_sKBK;
                  } in 
                    case
                        __primcall  eta.runtime.stg.Stg.trampoline [sat_sKBM]
                    of
                    _ [Occ=Dead]
                    { Unit# ipv_sKBO ->
                          case freshStateToken# [ipv_sKBO] of wild_sKBP [OS=OneShot] {
                            __DEFAULT -> (#,#) [wild_sKBP ipv_sKBO];
                          };
                    };
          a1_sKBJ [Occ=LoopBreaker]
            :: (Control.Concurrent.Fiber.Dyn -> GHC.Types.IO a_aJU7)
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_aJU7 #)
          [LclId,
           Arity=2,
           Str=<C(C(S)),1*C1(C1(U(U,U)))><S,U>,
           Unf=OtherCon []] =
              \r srt:SRT:[] [k_sKBQ s_sKBR]
                  case tryTakeMVar# [ww_sKBH s_sKBR] of _ [Occ=Dead] {
                    (#,,#) ipv_sKBT [Occ=Once*]
                           ipv1_sKBU [Occ=Once!]
                           ipv2_sKBV [Occ=Once] ->
                        case ipv1_sKBU of _ [Occ=Dead] {
                          __DEFAULT ->
                              case
                                  __primcall  eta.fibers.PrimOps.awakenMVarListeners [ww_sKBH
                                                                                      ipv_sKBT]
                              of
                              s''_sKBY [OS=OneShot]
                              { __DEFAULT -> k_sKBQ ipv2_sKBV s''_sKBY;
                              };
                          0 ->
                              case
                                  __primcall  eta.fibers.PrimOps.addMVarListener [ww_sKBH ipv_sKBT]
                              of
                              s''_sKC0 [OS=OneShot]
                              { __DEFAULT ->
                                    let {
                                      sat_sKC4 [Occ=Once] :: GHC.Prim.Any
                                      [LclId, Str=] =
                                          \u srt:SRT:[] []
                                              case
                                                  __primcall  eta.fibers.PrimOps.yieldFiber [1
                                                                                             lvl_sKBI
                                                                                             s''_sKC0]
                                              of
                                              s'_sKC3 [OS=OneShot]
                                              { __DEFAULT ->
                                                    a1_sKBJ
                                                        Control.Concurrent.Fiber.unFiber1 s'_sKC3;
                                              };
                                    } in 
                                      case
                                          __primcall  eta.runtime.stg.Stg.trampoline [sat_sKC4]
                                      of
                                      _ [Occ=Dead]
                                      { Unit# ipv3_sKC6 ->
                                            case
                                                freshStateToken# [ipv3_sKC6]
                                            of
                                            wild_sKC7 [OS=OneShot]
                                            { __DEFAULT -> k_sKBQ ipv3_sKC6 wild_sKC7;
                                            };
                                      };
                              };
                        };
                  };
        } in  Unit# [a1_sKBJ];
Control.Concurrent.Fiber.MVar.takeMVar [InlPrag=INLINE[0]]
  :: forall a_aJU7.
     GHC.MVar.MVar a_aJU7 -> Control.Concurrent.Fiber.Fiber a_aJU7
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U(U)>m, Unf=OtherCon []] =
    \r srt:SRT:[] [w_sKC8]
        case w_sKC8 of _ [Occ=Dead] {
          GHC.MVar.MVar ww1_sKCA [Occ=Once] ->
              case
                  Control.Concurrent.Fiber.MVar.$wtakeMVar ww1_sKCA
              of
              _ [Occ=Dead]
              { Unit# ww3_sKCC [Occ=Once] ->
                    Control.Concurrent.Fiber.Fiber [ww3_sKCC];
              };
        };

